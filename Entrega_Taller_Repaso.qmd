---
title: "Taller evaluado de repaso para el Primer Parcial - Àngela Martí Calatayud"
subtitle: "20582- Análisis de Datos para el GMAT"
format:
  html:
    theme: lumen
    toc: true
    toc-depth: 3
Rendering:
    embed-resources: true
editor: 
  markdown: 
    wrap: sentence
    
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```

```{r, echo=FALSE, include=FALSE}
library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)
library(Hotelling)
library(MASS)
library(readr)
library(tidyr)
```

El cambio climático está provocando un aumento en la temperatura media global, lo que a su vez incrementa la frecuencia y severidad de fenómenos meteorológicos extremos, como olas de calor y lluvias intensas, como hemos visto esta última semana en Valencia.

Nuestro objetivo es hacer un analisi apartir de ciertas dadas, que explicaremos más abajo, para ver si el cambio climatico es real, es decir, para ver si el cambió climatico esta influenciando en la temperatura, en las lluvias, en la sequia... 

En primer lugar haremos un análisi descriptivo calculando la matriz de correlación para ver cómo se relacionan las variables numéricas entre sí. Seguidamente, haremos 3 gráficos de barras, para isualizar que tipo de suceso és el más freqüente, y cual es la intensidad con la que ocurren. Y por último, haremos un ggplot para ver que tipo de eventos era más frecuente en cada periodo de tiempo. También realizaremos un grafico de barras para ver la distribución de cada evento por región.

Seguidamente, realizaremos un borxplot para analizar la temperatura global por tipo de evento y un gráfico de dispersión para así analizar la relación entre la precipitación total y la temperatura global, coloreando por tipo de evento. 

Después, calcularemos las probabilidades de cada tipo de evento en un vector para la distribución multinomial, i después simularemos una muestra de tamaño 20, usando la distribución multinomial. Finalmente, calcularemos la probabilidad de un evento de interés donde dicha muestra serà de tamaño 20.

Suiguiendo con el análisi de las variables, haremos un ajuste en un modelo de regresión multivariante, donde utilizaremos el score, que es la diferencia entre los valores observados y los valores predichos por el modelo, lo que se conoce como residuales, i analizaremos los residuales para evaluar la precisión y ajuste del modelo.

Finalmente, haremos dos contrastes de hipótesis:
Uno primero que definiremos como:

- H_0: Las variables cuantitativas satisfacen una relación
- H_1: Las variables cuantitativas no satisfacen ninguna relación

Donde para poder sacar conclusiones, primero calcularemos la distancia de Mahalaondis y después haremos la pueba $\chi^2$, y veremos que no sigue esa distribución y por o tanto rechaza la hipotesis nul.la es decir, rechazamos que las variables tienen alguna relación.

Y un segundo contraste en el cual queremos evaluar si existe una diferencia significativa en el vector de medias de las variables climáticas cuantitativas (`temp_global`, `dias_calor`, `dias_lluvia`, `F2021` Y `F2022`) entre dos tipos de eventos climáticos: "Ola de Calor" y "Sequía". Para ello realizaremos la prueba de Hotelling's ( T\^2 ), y nos da un p valor alto, por lo cual no podremos rechazar la hipotesis nul.la, es decir, no hay evidencia estadística suficiente para afirmar que las medias de las variables cuantitativas son significativamente diferentes entre los dos tipos de eventos ("Ola de Calor" y "Sequía").

Por lo tanto, a lo largo de este análisi no sacamos ninguna conclusión afirmativa, lo cual seguramente viene dado por haver creado nosotros una tabla simulada (tabla1) sin coger datos reales, y luego intentar compararlo con unos datos reales. Por eso, para futuros informes recomendaria, buscar más información sobre la tabla simulada para así intentar sacar unas mejores conclusiones.

# Definición de las variables

En primer lugar, vamos a definir la variables clave para nuestra hipòtesis, donde tendremos cuatro variables cuantitativas, tres ordinales y dos nominales, que són: 
  - Variables Ordinales:
    - Temperatura Media Global Anual (ºC)
    - Número de Días de Olas de Calor (días)
    - Número de Días de Lluvias Intensas (días)
    - Precipitación Anual Total en milímetros (mm)
  - Variables Cualitativas (hacer mosaico) 
    - Severidad de las Olas de Calor (Baja, Moderada, Alta, Extrema)
    - Intensidad de Lluvias Intensas (Baja, Moderada, Alta)
    - Período de Tiempo ("1980-1990", "1991-2000", "2001-2010", "2011-2020")
  - Variables Nominales
    - Región Geográfica (América del Norte, Europa, Asia, América Latina, África)
    - Tipo de Evento (Ola de Calor, Lluvia Intensa, Sequía, Inundación)

Seguidamente, generaramos una tabla, que la llamaremos como tabla1, con al menos 100 abservaciones, donde las variables cuantitativas sigan una distribución normal multivariante.

```{r, echo=FALSE}
media <- c(15, 100, 50, 850)  # Medias de temp_global, dias_calor, dias_lluvia, precipitacion_total
covarianza <- matrix(c(0.1, 0.05, 0.07, 1.5,
                       0.05, 4, 2, 5,
                       0.07, 2, 6, 7,
                       1.5, 5, 7, 200), 
                     nrow = 4, ncol = 4)

# Generar los datos con distribución normal multivariante
set.seed(123)  # Fijar semilla para reproducibilidad
datos_numericos <- mvrnorm(150, mu = media, Sigma = covarianza)

# Limitar y ajustar valores en las variables
# Redondear temp_global a una decimal, heatwaves y heavy_rain a enteros, y precipitation_total a enteros
datos_numericos[,1] <- round(datos_numericos[,1], 1)   # Temp_global en grados Celsius
datos_numericos[,2] <- round(pmax(datos_numericos[,2], 0)) # dias_calor en días, mínimo de 0 días
datos_numericos[,3] <- round(pmax(datos_numericos[,3], 0)) # dias_lluvia en días, mínimo de 0 días
datos_numericos[,4] <- round(pmax(datos_numericos[,4], 0)) # precipitacion_total en mm, mínimo de 0


# Crear una tabla de datos completa con las variables adicionales
# Asignación de variables nominales y ordinales
tabla1 <- data.frame(
  temp_global1 = datos_numericos[,1],             # Temperatura Media Global Anual (°C)
  dias_calor1 = datos_numericos[,2],               # Número de Días de Olas de Calor (días)
  dias_lluvia1 = datos_numericos[,3],              # Número de Días de Lluvias Intensas (días)
  precipitacion_total1 = datos_numericos[,4],     # Precipitación Anual Total (mm)
  region1 = sample(c("América del Norte", "Europa", "Asia", "América Latina", "África"), 150, replace = TRUE),
  tipo_evento1 = sample(c("Ola de Calor", "Lluvia Intensa", "Sequía", "Inundación"), 150, replace = TRUE),
  ola_calor1 = ordered(sample(1:4, 150, replace = TRUE), labels = c("Baja", "Moderada", "Alta", "Extrema")),
  lluvia_intensa1 = ordered(sample(1:3, 150, replace = TRUE), labels = c("Baja", "Moderada", "Alta")),
  periodo_de_tiempo1 = ordered(sample(1:4, 150, replace = TRUE), labels = c("1980-1990", "1991-2000", "2001-2010", "2011-2020"))
)


# Ordenar por 'region1' y añadir columna de identificador
tabla1 <- tabla1 %>%
  arrange(region1) %>%             # Ordenar por región
  mutate(id = row_number()) %>%     # Añadir identificador único
  dplyr::select(id, everything())          # Mover 'id' a la primera columna

# Ver las primeras filas para verificar
#head(tabla1)

```

Sguidamente, a partir de [Kaggle](https://www.kaggle.com/), hemos extraído un .csv llamado como climate_change_indicators.csv, que nos quedamos solo con las variables "Country", "F2021", "F2022", donde estas dos últimas nos indican el cambio de temperatura con respecto a una climatología de referencia, correspondiente al período 1951-1980. 
Con la variable "Country", haremos un par de modificaciones, para así, despues poder unificar estas dos tablas. Lo que haremos serà todos los valores que aparecen el la variable "Country", las distribuïmos en las regiones de la tabla 1, depeniendo a cual correspondan, que són América del Norte, Europa, Asia, América Latina, África .

```{r, echo=FALSE}
tabla2 <- read_csv("climate_change_indicators.csv")

# Crear el mapeo de países a regiones
region_paises <- list(
  "America Latina" = c("Argentina", "Bolivia", "Brazil", "Chile", "Colombia", "Costa Rica", "Cuba", 
                      "Barbados", "Belize", "Bolivia", 
                      "Brazil", "British Virgin Islands", "Cayman Islands", 
                          "Chile", "Colombia", "Costa Rica", "Cuba", "Dominica", 
                          "Dominican Rep.", "Ecuador", "El Salvador", 
                          "Falkland Islands (Malvinas)", "Grenada", "Guadeloupe", 
                          "Guatemala", "Guyana", "Haiti", "Honduras", 
                          "Jamaica", "Martinique", "Mexico", "Montserrat", 
                          "Nicaragua", "Panama", "Paraguay", "Peru",  "Grenada"),
  "America del Norte" = c("United States", "Canada", "Mexico", "Bermuda", "Greenland", "French Polynesia", "Kiribati",        
             "Micronesia, Federated States of", "Nauru, Rep. of", 
             "New Caledonia", "New Zealand", "Niue", "Norfolk Island", 
             "Palau, Rep. of", "Papua New Guinea", "Samoa", 
             "Solomon Islands", "Tokelau", "Tonga", "Saint Pierre and Miquelon"), #para que haya mas datos cogemos también los de Oceania aquí dentro
  "Asia" = c("China", "India", "Japan", "South Korea", "Indonesia", "Pakistan", "Bangladesh", 
             "Vietnam", "Philippines", "Iran", "Turkey", "Thailand", "Myanmar", "Iraq", 
             "Afghanistan", "Saudi Arabia", "Uzbekistan", "Malaysia", "Yemen", "Nepal", 
             "Sri Lanka", "Kazakhstan", "Syria","Afghanistan, Islamic Rep. of", "Armenia, Rep. of", "Azerbaijan, Rep. of", 
          "Korea, Rep. of", "Kuwait", "Kyrgyz Rep.", "Lao People's Dem. Rep.", 
          "Malaysia", "Maldives", "Mongolia", "Myanmar", "Nepal", 
          "Thailand", "Tajikistan", "Israel", "Laos", "Lebanon", "Kyrgyzstan", 
             "Turkmenistan", "Singapore", "Oman", "State of Palestine"),
  "Europa" = c("United Kingdom", "Germany", "France", "Italy", "Spain", "Ukraine", "Poland", 
               "Romania", "Netherlands", "Belgium", "Czech Republic", "Greece", "Portugal", 
               "Sweden", "Hungary", "Belarus", "Austria", "Switzerland", "Bulgaria", "Serbia", 
               "Denmark", "Finland", "Albania", "Andorra, Principality of", "Austria", "Belarus, Rep. of", 
            "Italy", "Latvia", "Liechtenstein", "Lithuania", 
            "Luxembourg", "Malta", "Moldova, Rep. of", "Monaco", 
            "Montenegro", "Netherlands, The", "North Macedonia, Republic of", 
            "Norway", "Poland, Rep. of", "Portugal", "Romania", 
            "Russian Federation", "San Marino, Rep. of", "Serbia, Rep. of", 
            "Bosnia and Herzegovina", "Albania", "Lithuania", "North Macedonia", "Slovenia", 
               "Latvia", "Estonia", "Luxembourg", "Malta", "Iceland", "Andorra", "Monaco", 
               "Liechtenstein", "San Marino"),
  "Africa" = c("Nigeria", "Ethiopia", "Egypt", "DR Congo", "Tanzania", "South Africa", "Kenya", 
               "Uganda", "Algeria", "Sudan", "Morocco", "Angola", "Mozambique", "Ghana", 
               "Madagascar", "Cameroon", "Côte d'Ivoire", "Niger", "Burkina Faso", "Mali", 
               "Malawi", "Zambia", "Senegal", "Chad", "Somalia", "Zimbabwe", "Guinea", 
               "Rwanda", "Benin", "Burundi", "Tunisia", "South Sudan", "Togo", "Sierra Leone", 
               "Libya", "Congo", "Liberia", "Central African Republic", "Mauritania", "Eritrea", 
               "Namibia", "Gambia", "Botswana", "Burkina Faso", 
            "Burundi", "Cabo Verde", "Cameroon", "Central African Rep.", 
            "Chad", "Comoros, Union of the", "Congo, Dem. Rep. of the", 
            "Congo, Rep. of", "Djibouti", "Egypt, Arab Rep. of", 
            "Equatorial Guinea, Rep. of", "Eritrea, The State of", 
            "Eswatini, Kingdom of", "Ethiopia, The Federal Dem. Rep. of", 
            "Gabon", "Gambia, The", "Ghana", "Guinea", "Guinea-Bissau", 
            "Ivory Coast", "Kenya", "Lesotho, Kingdom of", "Liberia", 
            "Libya", "Madagascar, Rep. of", "Malawi", "Mali", 
            "Mauritania, Islamic Rep. of", "Mauritius", "Morocco", 
            "Mozambique, Rep. of", "Namibia", "Niger", "Nigeria", 
            "Rwanda", "São Tomé and Príncipe, Dem. Rep. of", 
            "Senegal", "Seychelles", "Sierra Leone", "Somalia", 
            "South Africa", "South Sudan, Rep. of", "Sudan", 
            "Tanzania, United Rep. of", "Togo", "Tunisia", 
            "Uganda", "Zambia", "Zimbabwe", "Gabon", "Lesotho", "Eswatini", "Guinea-Bissau", 
               "Equatorial Guinea", "Seychelles", "Sao Tome and Principe", "Comoros", "Cabo Verde")
)

# Crear un dataframe para el mapeo de regiones
region_df <- stack(region_paises)
colnames(region_df) <- c("Country", "region")

# Unir el mapeo con los datos
data2 <- merge(tabla2, region_df, by.x = "Country", by.y = "Country", all.x = TRUE)

# Filtrar y ordenar los datos por región y país
tabla2 <- data2 %>%
  dplyr::select(Country, region, F2021, F2022) %>%
  filter(!is.na(region)) %>%
  arrange(region, Country)

# Añadir una columna de identificador
data_final <- tabla2 %>%
  mutate(id = row_number()) %>%  # Añadir ID secuencial
  dplyr::select(id, everything())  # Eliminar 'Country' y reordenar

data_final<- data_final %>%
  dplyr::select(-Country)

# Ordenar por región y luego por el identificador
tabla2 <- data_final %>%
  arrange(id, region)

# Mostrar los primeros resultados
#head(tabla2, 10)

```




Finalmente, uniremos la dos tablas creados creando unatabla unificada a partir de la cual haremos el analisi para extraer las conclusiones.

```{r, echo=FALSE}

# Unir ambas tablas por el identificador común 'id'
tabla_combinada <- tabla1 %>%
  left_join(tabla2, by = "id")
tabla_combinada <- tabla_combinada %>%
  drop_na() #eliminamos las filas que tengan algun valor nul.lo
# Verificar las primeras filas de la tabla combinada
#head(tabla_combinada)

# Resumen de la tabla combinada
#summary(tabla_combinada)
```

# Análisi de los datos 

Primero, vamos a realizar un anàlisi descriptivo

En primer lugar, vamos a calcular la matriz de correlación para ver cómo se relacionan las variables numéricas entre sí. Es decir vamos a representar la matriz de correlación y de dispersión para varias variables climáticas, mostrando sus relaciones entre sí.


```{r, echo=FALSE}
#Matriz de correlación (sin especificar nombres, seleccionando automáticamente solo las columnas numéricas)
matriz_correlacion <- tabla_combinada %>% 
  select_if(is.numeric) %>% 
  cor()
#print(matriz_correlacion)

#Visualización de la correlación con ggpairs (sin especificar nombres)
ggpairs(tabla_combinada %>% 
          dplyr::select(-id) %>%
          select_if(is.numeric), 
        title = "Matriz de Gráficos de Pares de Variables Cuantitativas")

```

- temp_global1: Representa la temperatura global en algún rango de años. No parece tener una correlación fuerte con otras variables en este gráfico, ya que todas las correlaciones están por debajo de 0.35, indicando relaciones débiles o inexistentes con las otras variables.

- dias_calor1: Se refiere a la cantidad de días calurosos. Su relación más fuerte es con dias_lluvia1 (correlación de 0.290), lo cual indica una relación positiva débil, sugiriendo que a medida que aumentan los días de calor, también aumentan los días de lluvia, aunque de forma limitada.

- dias_lluvia1: Representa los días de lluvia. Tiene una correlación positiva de 0.340 con precipitacion_total1, lo cual es lógico, ya que más días de lluvia suelen asociarse con una mayor precipitación total.

- precipitacion_total1: La cantidad total de precipitación también tiene una correlación positiva de 0.120 con F2021, sugiriendo que en los años en que la variación de temperatura fue más alta, también hubo una leve tendencia a que aumentara la precipitación, aunque esta relación es bastante débil.

- F2021 y F2022: Representan las variaciones de temperatura entre los años 1958-1961 y 2021 y 2022, respectivamente. Hay una correlación moderada (0.533) entre F2021 y F2022, lo cual es esperable si consideramos que las variaciones en la temperatura de un año suelen correlacionarse con las del siguiente. Sin embargo, ambas tienen correlaciones muy bajas con las demás variables climáticas, lo cual sugiere que los cambios de temperatura no están fuertemente relacionados con los días de calor, lluvia o la precipitación total en este conjunto de datos.

En resumen, no parece haber una relación fuerte entre las variables de días de calor, lluvia y precipitación total con las variaciones de temperatura representadas por F2021 y F2022. Esto podría indicar que, en este conjunto de datos, los cambios en la temperatura global no están claramente asociados con los días de calor o lluvia ni con la cantidad de precipitación anual. La correlación más destacada es entre F2021 y F2022, lo cual es consistente con la tendencia de que las variaciones de temperatura interanuales están relacionadas, reflejando un patrón de continuidad en los cambios de temperatura.

Ahora, vamos a ver 3 cosas a partir de los graficos de barras. Vamos a visualizar que tipo de suceso és el más freqüente, y cual es la intensidad con la que ocurren.


```{r, echo=FALSE}
# Gráfico de barras para variables ordinales y nominales
#Gráfico de barras para la variable "tipo_evento"
tabla_combinada %>%
  ggplot(aes(x = tipo_evento1)) +
  geom_bar(fill = "skyblue") +
  labs(title = "Distribución de Tipos de Eventos", x = "Tipo de Evento", y = "Frecuencia") +
  theme_minimal()

#Gráfico de barras para la variable "olas de calor"
tabla_combinada %>%
  ggplot(aes(x = ola_calor1)) +
  geom_bar(fill = "salmon") +
  labs(title = "Distribución de Severidad de Olas de Calor", x = "Severidad", y = "Frecuencia") +
  theme_minimal()

#Gràfico de barras para la variable "lluvia_intensa"
tabla_combinada %>%
  ggplot(aes(x = lluvia_intensa1)) +
  geom_bar(fill = "pink") +
  labs(title = "Distribución de Intensidad de la Lluvia", x = "Intensidad", y = "Frecuencia") +
  theme_minimal()

```

A partir de estos tres gràfics de barras, vemos que el evento que más se produce en la lluvia intesa, seguidos de las olas de calor. También nos damos cuenta de que la intensidad de las olas de calor, cundo se producen, són de nivel alto o extremo. En canbio, la intensidad de las lluvias es baja-moderada, aunque vemos que la freqüéncia de la alta intensidad de lluvias también està bastante elevada.

Ahora vamos a ver, que tipo de eventos era más frecuente, por cada periodo de tiempo.

```{r, echo=FALSE}
tabla_combinada %>%
  ggplot(aes(x = periodo_de_tiempo1, fill = tipo_evento1)) +
  geom_bar(position = "dodge") +
  labs(
    title = "Distribución de Tipos de Eventos por Periodo de Tiempo",
    x = "Periodo de Tiempo",
    y = "Conteo de Eventos",
    fill = "Tipo de Evento"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
  )


```
Vemos facilmente, que la lluvia intensa siempre esta entre los tres primeros. En canbio, obersvamos que las olas de calor, han estado disminuyendo a lo largo de los años. (Es facil darse cuenta de que estos datos són aleatorios ya que este año pasado las olas de calor han sido mayores que a otros años).

Ahora, vamos a hacer el grafico del mosaico, con respecto a la tabla1

```{r, echo=FALSE}
# Convertir a tabla de frecuencias de dos variables categóricas
tabla_frecuencias <- table(tabla_combinada$region1, tabla_combinada$tipo_evento1)

# Crear el gráfico de mosaico
mosaicplot(tabla_frecuencias, main = "Distribución de Eventos por Región",
           xlab = "Región", ylab = "Tipo de Evento", color = TRUE)


```
El gráfico muestra la distribución de eventos climáticos/extremos en diferentes regiones del mundo, como África, América del Norte, América Latina, Asia, y Europa.

En el eje vertical está el tipo de evento (como ola de calor, lluvia intensa, inundación, y sequía), mientras que en el eje horizontal están las regiones geográficas.

Sabemos que la intensidad del color y el tamaño de los bloques representan la frecuencia o relevancia de cada tipo de evento en cada región. Los bloques más oscuros y grandes indican una mayor prevalencia de ese tipo de evento en esa región específica.

Por ejemplo, en África y América del Norte, el bloque para olas de calor es grande y oscuro, sugiriendo que estos eventos son más comunes o impactantes en esas regiones.

Observamos entonces que:

- Olas de Calor: Son especialmente frecuentes en África, América del Norte y Europa (bloques grandes y oscuros en estas regiones), lo que podría reflejar patrones de cambio climático que afectan más a estas áreas.

- Lluvia Intensa: Aparece de manera más equilibrada en casi todas las regiones, aunque es especialmente notable en Asia, donde el bloque es más grande.

- Inundación: También es más prominente en Asia, seguida de América del Norte y América Latina, lo cual puede estar relacionado con las características climáticas y geográficas de estas regiones (monzones en Asia, huracanes en América).

- Sequía: Es relevante en África y América Latina, aunque es menos significativa en otras regiones como Europa y América del Norte.

Por lo tanto, el mosaico sugiere que distintas regiones enfrentan distintos desafíos climáticos. África, América del Norte y Europa enfrentan principalmente olas de calor, mientras que Asia enfrenta lluvias intensas e inundaciones de manera más notable.

La sequía es un problema en África y América Latina, indicando que estas regiones podrían tener problemas relacionados con la disponibilidad de agua y la agricultura.

És decir, este gráfico refleja cómo el cambio climático y los eventos extremos afectan de forma diferenciada a las regiones.

Seguidamente, vamos a hacer un borxplot para analizar la temperatura global por tipo de evento y un gráfico de dispersión para analizar la relación entre la precipitación total y la temperatura global, coloreando por tipo de evento.

```{r, echo=FALSE}
#Boxplot para analizar la temperatura global por tipo de evento
tabla_combinada %>%
  ggplot(aes(x = tipo_evento1, y = F2022, fill = tipo_evento1)) +
  geom_boxplot() +
  labs(title = "Distribución de la Var. de la Temp. Global con respecto 1951-198 en 2022 por Tipo de Evento", x = "Tipo de Evento", y = "Var. de la Temperatura Global 2022 (°C)") +
  theme_minimal()
```
Sabemos que cada caja representa un rango de de la variación de las temperaturas globales respecto de los años 1951-198 en 2022 asociadas con un tipo específico de evento climático. Además, la línea dentro de cada caja muestra la mediana de las variaciones de la temperatura para cada tipo de evento. Y los límites de cada caja (percentiles 25 y 75) indican el rango intercuartílico, y las líneas o "bigotes" representan los valores que caen dentro de 1.5 veces el rango intercuartílico por debajo o por encima de los percentiles. Los puntos fuera de los bigotes se consideran valores atípicos.

El gráfico sugiere que el tipo de evento puede influir en la variabilidad de la temperatura global. "Inundación" parece estar asociado con una mayor variabilidad de la temperatura, mientras que "Ola de Calor" tiene una distribución más concentrada alrededor de la mediana. Además, los eventos de "Sequía" presentan una mayor dispersión en los valores de variación de temperatura y algunos valores atípicos. Esto podría indicar que la temperatura global varía de manera diferente según el tipo de evento, lo cual podría ser un aspecto relevante para futuros análisis.


```{r, echo=FALSE}
#Gráfico de dispersión para analizar la relación entre la precipitación total y la temperatura global, coloreando por tipo de evento
tabla_combinada %>%
  ggplot(aes(x = precipitacion_total1, y = F2022, color = tipo_evento1)) +
  geom_point(alpha = 0.7) +
  labs(title = "Relación entre Precipitación Total y la Variacion de la Temperatura Global 2022",
       x = "Precipitación Total (mm)", y = "Var. Temperatura Global 2022 (°C)") +
  theme_minimal()
```
Mirando la distribución general de los eventos, no se observa una relación clara entre la precipitación total y la variación de la temperatura global en 2022. Los puntos parecen dispersarse de forma aleatoria, lo que sugiere que la precipitación total no está fuertemente correlacionada con la variación de la temperatura global en este conjunto de datos.
En este gráfico, los puntos de los distintos tipos de eventos (representados por diferentes colores) están distribuidos de forma amplia y uniforme en el rango de precipitación y variación de temperatura.

Comparando este grafico con el anterior, vemos que en el gráfico de cajas, algunos eventos (como las inundaciones) tenían una mediana de variación de temperatura global ligeramente superior, mientras que otros eventos, como las olas de calor, mostraban una menor dispersión en los valores de temperatura. Esto indicaba posibles diferencias en la variación de la temperatura según el tipo de evento.
En este gráfico, sin embargo, no parece haber una relación fuerte entre los tipos de eventos y la precipitación total en relación con la temperatura global. Esto podría interpretarse como una falta de influencia significativa de la precipitación total en la variación de temperatura cuando se consideran diferentes eventos.

En resumen, aunque la variación de temperatura global parece depender en cierta medida del tipo de evento, no se observa una relación lineal o directa entre la precipitación total y la variación de la temperatura global según el tipo de evento. Esto indica una posible complejidad en la relación entre estos factores climáticos lo qual viene dado de que algunos datos són simulados.

Seguidamente, vamos a hacer un borxplot para analizar la temperatura global por tipo de evento y un gráfico de dispersión para analizar la relación entre la precipitación total y la temperatura global, coloreando por tipo de evento.

Ahora, selectionamos la variable "tipo_evento" i la modelízamos con una distribución multinomial, para así, estimar sus parámetros.


Primero, calculamos las probabilidad de cada tipo de evento:

```{r, echo=FALSE}
# Frecuencia relativa de cada tipo de evento en la variable tipo_evento
probabilidades_evento <- tabla_combinada %>%
  count(tipo_evento1) %>%
  mutate(probabilidad = n / sum(n))

probabilidades_evento
```

Seguidamente, extraemos las probabilidades en un vector para la distribución multinomial, i después simulamos una muestra de tamaño 20 usando distribución multinomial, lo qual genera el número esperado de cada tipo de evento en dicha muestra de tamaño 20.


```{r, echo=FALSE}
probs <- probabilidades_evento$probabilidad #extraemos probabilidad
set.seed(42)  # Fijar semilla para reproducibilidad
muestra_multinomial <- rmultinom(n = 1, size = 20, prob = probs) #Simular una muestra de tamaño 20 usando distribución multinomial

# Mostrar resultados de la muestra multinomial
rownames(muestra_multinomial) <- probabilidades_evento$tipo_evento1
colnames(muestra_multinomial) <- c("Simulación")
print(muestra_multinomial)
```

Finalmente, calculamos la probabilidad de un evento de interés, por ejemplo "Inundación", donde dicha muestra es de tamaño 20.

```{r, echo=FALSE}
# Probabilidad de observar al menos una "Ola de Calor" en la muestra de tamaño 20
evento_interes <- "Inundación"

# Probabilidad de que ocurra al menos una "Inundación" en la muestra
prob_evento_interes <- 1 - dbinom(0, size = 20, prob = probs[probabilidades_evento$tipo_evento1 == evento_interes])
cat("La probabilidad de observar al menos una 'Inundación' en una muestra de tamaño 20 es:", prob_evento_interes, "\n")

```

Este análisis nos permite evaluar la probabilidad de ocurrencia de la inundación en una muestra simulada, lo cual,nos ha sido útil para comprender la frecuencia esperada de eventos extremos en el contexto del cambio climático.


Ahora, con las variables cuantitativas de nuestra base de datos, ajustaremos un modelo de regresión multivariante en la siguiente forma:

$$Y=\beta_0+\beta_1 X_1+ \cdots + \beta_p X_p + \epsilon$$ Donde $Y$ es la variable cuantitativa que deseamos explicar en función del resto de variables cuantitativas registradas, es decir, la variable dependiente que en nustro caso sera "temp_global" y 'dias_calor', 'dias_lluvia', y 'precipitacion_total' son las variables independientes (X_1, X_2, X_3).


"El score es la diferencia entre los valores observados y los valores predichos por el modelo, lo que se conoce como residuales. Analizaremos los residuales para evaluar la precisión y ajuste del modelo."

```{r, echo=FALSE}
# Ajuste del modelo de regresión
#modelo <- lm(F2022 ~ dias_calor1 + dias_lluvia1 + precipitacion_total1, data = tabla_combinada)
modelo <- lm(temp_global1 ~ F2021 + F2022, data = tabla_combinada)

# Resumen del modelo para ver los coeficientes y el ajuste
#summary(modelo)

# Cálculo de la función de score: los residuales del modelo
residuales <- resid(modelo)

# Interpretación del score en el contexto del problema
cat("Los primeros valores de los residuales (score) son:\n")
print(head(residuales))
```

Vamos a visualizar el histográma para ver su distribución:

```{r, echo=FALSE}
# Evaluación gráfica de los residuales
# Histograma de los residuales para ver su distribución
hist(residuales, main = "Distribución de los Residuales", xlab = "Residuales", col = "lightblue", border = "black")
```
Observamos que la forma de la distribución de los residuales es aproximadamente simétrica y se asemeja a una distribución normal centrada en 0. Por lo tanto, arece que el modelo de regresión ajustado es adecuado y cumple con los supuestos básicos de la regresión lineal.

Por ùltimo, como no se observan residuales muy alejados de 0, indica que no hay outliers (valores atípicos) evidentes en los datos.

Veamos ahora si hay alguna tendéncia o patron en los errores:

```{r, echo=FALSE}
# Gráfico de dispersión de los valores predichos vs los residuales
# Para observar si hay alguna tendencia o patrón en los errores
plot(modelo$fitted.values, residuales,
     main = "Valores Predichos vs Residuales",
     xlab = "Valores Predichos",
     ylab = "Residuales",
     col = "blue", pch = 16)
abline(h = 0, col = "red", lwd = 2)


```

Los ejes del gráfico nos indican lo siguiente: 
- Eje X (Valores Predichos): Representa los valores de temp_global1 que el modelo predice basándose en los valores de F2021 y F2022.
- Eje Y (Residuales): Muestra los errores o diferencias entre los valores observados de temp_global1 y los valores que el modelo predice. Idealmente, estos residuales deberían estar distribuidos de forma aleatoria alrededor de 0.

Observamos que la mayoría de los puntos se encuentran cerca de la línea roja (que representa el valor 0 en los residuales), lo cual sugiere que los errores están bastante centrados alrededor de 0. Esto es positivo, ya que indica que el modelo no está sistemáticamente subestimando ni sobreestimando los valores.
No parece haber un patrón claro en la dispersión de los puntos, lo cual es una buena señal. En un modelo de regresión lineal, se espera que los residuales estén distribuidos aleatoriamente sin patrones obvios, lo cual indicaría que el modelo capturó bien la relación lineal entre las variables.

Si hacemos ahora, la prueva de Shapiro-Test, obtenemos:
```{r,echo=FALSE}
shapiro.test(resid(modelo))
```
Por lo tanto, como el $p_{valor}>0.05$, nos indica que los iresiduales son normales.

Ahora, si utilizamos el ANOVA, tenemos que:
```{r,echo=FALSE}
modelo_alternativo <- lm(temp_global1 ~ F2021, data = tabla_combinada)
anova(modelo, modelo_alternativo)


```
Como El valor p para el estadístico F es 0.9356, que es muy alto $(>0.05)$. Esto indica que no hay evidencia significativa de que F2022 mejore el modelo de predicción de temp_global1 cuando F2021 ya está en el modelo.
És decir, esto sugiere que añadir F2022 no aporta una mejora significativa al ajuste del modelo. Por lo tanto, el modelo con solo F2021 es suficiente y más adecuado desde una perspectiva de simplicidad y eficiencia.

Visualizamos ahora solo el modelo con $F2021$:

```{r,echo=FALSE}
library(ggplot2)
ggplot(tabla_combinada, aes(x = F2021, y = temp_global1)) +
    geom_point() +
    geom_smooth(method = "lm", formula = y ~ x, color = "blue") +
    labs(title = "Relación entre F2021 y temp_global1", x = "F2021", y = "Temp Global 1") +
    theme_minimal()

```

Observamos que  la línea de regresión muestra una leve relación positiva entre F2021 y temp_global1, es decir, a mayor F2021, temp_global1 tiende a subir ligeramente. Però los puntos están dispersos, lo que indica que F2021 explica poco de la variabilidad en temp_global1. Por lo tanto, $F2021$ por sí solo no es un predictor fuerte para temp_global1.

**Planteamiento del Contraste de Hipótesis**

Calcularemos la distància de Mahalaondis, para ver si si nuestras variables satisfacen una relación $\chi^2_6$, est 6 es porque tenemos 6 variables cuanitativas.

Definimos las hipótesis nula y alternativa de la siguiente manera:

- H_0: Las variables cuantitativas satisfacen una relación (és decir, los datos en dist_mahalanobis siguen una distribución ji-cuadrado con 6 grados de libertad.)

- H_1: Las variables cuantitativas no satisfacen ninguna relación (és decir, Los datos en dist_mahalanobis no siguen una distribución ji-cuadrado con 6 grados de libertad.)

Para ello, primero utilizaremos la función de R de mahalaondis. Después, la añadiremos, como una columna nueva a nuestra tabla combinada. Después, crearemos una matriz transpuesta y calcukaremos de igual forma la distancia de mahalaondis tranformada, y la añadiremos también a nuestra tabla combinada, es decir la tabla con la que estaos trabajando. 

```{r, echo=FALSE}
# Asegurarse de que la tabla combinada es solo numérica (o selecciona columnas numéricas)
datos_num <- tabla_combinada %>% 
  select_if(is.numeric)  # Selecciona solo las columnas numéricas para el análisis

# 1. Calcular la distancia de Mahalanobis para los datos originales
# Esto calcula la distancia de Mahalanobis al cuadrado
dist_mahalanobis <- mahalanobis(datos_num, colMeans(datos_num), cov(datos_num))

# Añadir las distancias de Mahalanobis como una nueva columna en la tabla combinada
tabla_combinada_maha <- tabla_combinada %>%
  mutate(mahalanobis_d2 = dist_mahalanobis)

# 2. Definir la matriz de transformación T y aplicarla a los datos numéricos
T <- matrix(c(1.2, 0.3, 0.0,
              0.2, 1.1, 0.0,
              0.0, 0.0, 1.5), nrow = ncol(datos_num), byrow = TRUE)

# Asegurarse de que la matriz T tenga el mismo número de columnas que datos_num
if(ncol(datos_num) != nrow(T)) {
  stop("El número de columnas en 'datos_num' debe coincidir con el número de filas en 'T'")
}

# Aplicar la transformación a los datos numéricos
datos_transformados <- as.matrix(datos_num) %*% T

# 3. Calcular la distancia de Mahalanobis en los datos transformados
dist_mahalanobis_transformado <- mahalanobis(datos_transformados, colMeans(datos_transformados), cov(datos_transformados))

# Añadir la distancia de Mahalanobis transformada a la tabla combinada
tabla_combinada_maha <- tabla_combinada_maha %>%
  mutate(mahalanobis_d2_transformado = dist_mahalanobis_transformado)

# Ver las primeras filas con las distancias
#head(tabla_combinada_maha)





```
Ahora, vamos a visualizar el histograma para la distancia de Mahalanobis original.

```{r, echo=FALSE}
# Cargar la librería necesaria para la visualización
library(ggplot2)

# Número de variables (grados de libertad), es decir, el número de columnas en datos_num
k <- ncol(datos_num)

# Histograma para la distancia de Mahalanobis original
ggplot(tabla_combinada_maha, aes(x = mahalanobis_d2)) +
  geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
  stat_function(fun = dchisq, args = list(df = 6), color = "red", size = 1.5) +
  labs(title = "Distribución de Distancias Mahalanobis al Cuadrado (Original)",
       subtitle = paste("Comparación con la distribución Chi-cuadrado con", k, "grados de libertad"),
       x = "Distancia Mahalanobis al Cuadrado",
       y = "Densidad") +
  theme_minimal()

```
Como vemos, la distancia de Mahalanobis original intenta parecer-se un poco a una distribución $\chi^2_6$, aunque hay una barra que descuadra, pero, en cambio, la transformada no se parece en nada. Hagamos la prueba estadística para ver si podemos confirmar la distribución $\chi^2_6$.

```{r, echo=FALSE}
# Prueba estadística para confirmar distribución ji-cuadrado
ks.test(dist_mahalanobis, "pchisq", df = 6)

```

Como el $p-value<0.05$, entonces tenemos  los datos de dist_mahalanobis no siguen una distribución ji-cuadrado con 6 grados de libertad, ya que tenemos suficiente evidencia para rechazar la hipótesis nula. Esto sugiere que los datos no se ajustan bien a una distribución ji-cuadrado, por lo que puede ser necesario considerar otro modelo o verificar si existen problemas en los datos o en los supuestos del análisis. Esto era predicible, ya que las dos variables que hemos añadido de la tabla2 no siguen una distribución normal multivariante.

Vamos a realizar otro contraste de hipótesis

**Planteamiento del Contraste de Hipótesis**

Queremos evaluar si existe una diferencia significativa en el vector de medias de las variables climáticas cuantitativas (`temp_global`, `dias_calor`, `dias_lluvia`, `F2021` Y `F2022`) entre dos tipos de eventos climáticos: "Ola de Calor" y "Sequía".

*Planteamiento del Contraste de Hipótesis*

Definimos las hipótesis nula y alternativa de la siguiente manera:

$$
H_0: \mu_{\text{Ola de Calor}} = \mu_{\text{Sequía}}
$$

$$
H_1: \mu_{\text{Ola de Calor}} \neq \mu_{\text{Sequía}}
$$

Donde: - ( \mu*{*\text{Ola de Calor}} ) es el vector de medias de las variables cuantitativas para los eventos de tipo "Ola de Calor".
- ( \mu{\text{Sequía}} ) es el vector de medias de las variables cuantitativas para los eventos de tipo "Sequía".

En este contraste de hipótesis, usamos la prueba de Hotelling's ( T\^2 ) para evaluar si existe una diferencia significativa entre los vectores de medias multivariantes.

**Ejecución del Contraste de Hipótesis en R**

```{r, echo=FALSE}
# Filtrar los datos para el grupo de eventos de "Ola de Calor"
calor <- tabla_combinada %>%
  filter(tipo_evento1 == "Ola de Calor")

# Filtrar los datos para el grupo de eventos de "Sequía"
sequia <- tabla_combinada %>%
  filter(tipo_evento1 == "Sequía")

# Realizar el contraste de Hotelling usando solo las variables cuantitativas de interés
resultado_hotelling <- hotelling.test(calor[, c("temp_global1", "dias_calor1", "dias_lluvia1", "precipitacion_total1", "F2021", "F2022")],
                                      sequia[, c("temp_global1", "dias_calor1", "dias_lluvia1", "precipitacion_total1", "F2021", "F2022")])

# Ver los resultados del contraste
print(resultado_hotelling)

```

**Interpretación de Resultados** 
Según el resultado del contraste de Hotelling:

Si $p_{valor} < 0.05$: Rechazamos la hipótesis nula y concluimos que existe una diferencia significativa en el vector de medias para los eventos de tipo "Ola de Calor" y "Sequía".
Si $p_{valor} ≥ 0.05$: No rechazamos la hipótesis nula, lo cual indica que no encontramos evidencia suficiente para afirmar que las medias de las variables cuantitativas son diferentes entre los dos tipos de eventos.

Por lo tanto, como el p_valor es $0.9672$, tenemos que no podemos rechazar la hipotesis nula.Esto significa que no hay evidencia estadística suficiente para afirmar que las medias de las variables cuantitativas son significativamente diferentes entre los dos tipos de eventos ("Ola de Calor" y "Sequía").

Aunque el valor p es alto, es importante recordar que esta conclusión depende de la calidad de los datos, el tamaño de la muestra y los supuestos del modelo.


# Conclusiones i Recomendaciones

Es importante considerar que los resultado de los dos **Contrastes de hipótesis** no descartan posibles diferencias en otros aspectos o bajo otros contextos; simplemente reflejan que,  las variables utilizadas no permiten distinguir entre "Ola de Calor" y "Sequía" de manera significativa, o nos afirman que tengan una relación las variables cuantitativas.

Recomendaria revisar el tamaño de la muestra, verificar los supuestos del modelo y, en futuros estudios, considerar variables adicionales o enfoques alternativos para obtener una comprensión más completa de las diferencias entre estos fenómenos climáticos. Es decir, al ser la tabla 1 una muestra aleatoria y la otra real, a la hora de concluïr no hemos podido sacar conclusiones claras.



# Bibliografía
- Chatgpt
- [url-uniones_mutar](https://bookdown.org/ddiannae/curso-rdata/uniones-para-mutar.html)
- [libro_analisidatos](https://aprender-uib.github.io/AD/)













